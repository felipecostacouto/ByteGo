CREATE SCHEMA TakingTest;
SET search_path TO TakingTest;

CREATE TABLE Exam(
	ID SERIAL NOT NULL,
	name VARCHAR(100) NOT NULL,
	timeToDeliverInSeconds INTEGER NOT NULL,	
	closedQuestionsAmount INTEGER NOT NULL,
	openQuestionsAmount INTEGER NOT NULL,
	PRIMARY KEY(ID)
);

CREATE TABLE SystemUser(
	userLogin VARCHAR(50) NOT NULL,
	password VARCHAR(40) NOT NULL,
	imageProfile BYTEA,
	PRIMARY KEY(userLogin)
);

CREATE TABLE Student(
	studentLogin VARCHAR(50) NOT NULL,
	name VARCHAR(200) NOT NULL,
	PRIMARY KEY(studentLogin),
	FOREIGN KEY(studentLogin) REFERENCES SystemUser(userLogin)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Professor(
	professorLogin VARCHAR(50) NOT NULL,
	name VARCHAR(200) NOT NULL,
	PRIMARY KEY(professorLogin),
	FOREIGN KEY(professorLogin) REFERENCES SystemUser(userLogin)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ClassSubject(
	classSubjectID VARCHAR(20) NOT NULL,
	subject VARCHAR(100) NOT NULL,
	PRIMARY KEY(classSubjectID)
);


CREATE TABLE ClassStudents(
	classStudentLogin VARCHAR(50) NOT NULL,
	classID VARCHAR(20) NOT NULL,
	PRIMARY KEY(classStudentlogin, classID),
	FOREIGN KEY(classStudentlogin) REFERENCES Student(studentLogin),
	FOREIGN KEY(classID) REFERENCES ClassSubject(classSubjectID)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ClassProfessors(
	classProfessorLogin VARCHAR(50) NOT NULL,
	classID VARCHAR(20) NOT NULL,
	PRIMARY KEY(classProfessorLogin, classID),
	FOREIGN KEY(classProfessorLogin) REFERENCES Professor(professorLogin),
	FOREIGN KEY(classID) REFERENCES ClassSubject(classSubjectID)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Administrator(
	ADMlogin VARCHAR(50) NOT NULL,
	name VARCHAR(200) NOT NULL,
	PRIMARY KEY(ADMlogin),
	FOREIGN KEY(ADMlogin) REFERENCES SystemUser(userLogin)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE UserManageHistory(
	historyID SERIAL NOT NULL,
	historyUserLogin VARCHAR(40) NOT NULL,
	historyADMLogin VARCHAR(40) NOT NULL,
	date TIMESTAMP NOT NULL,
	operation VARCHAR(20) NOT NULL,
	PRIMARY KEY(historyID),
	FOREIGN KEY(historyUserLogin) REFERENCES SystemUser(userLogin),
	FOREIGN KEY(historyADMLogin) REFERENCES Administrator(ADMlogin)
);

CREATE TABLE ExamToTake(
	examToTakeStudentLogin VARCHAR(40) NOT NULL,
	examID SERIAL NOT NULL,
	limitDate TIMESTAMP NOT NULL,
	PRIMARY KEY(examID),
	FOREIGN KEY(examID) REFERENCES Exam(ID),
	FOREIGN KEY(examToTakeStudentLogin) REFERENCES Student(studentLogin)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE GradedExam(
	examID SERIAL NOT NULL,
	doneExamStudentLogin VARCHAR(40) NOT NULL,
	gradedExamProfessorLogin VARCHAR(40) NOT NULL,
	gradedTime TIMESTAMP NOT NULL,
	score DECIMAL(5, 2) NOT NULL,
	PRIMARY KEY(examID),
	FOREIGN KEY(examID) REFERENCES Exam(ID),
	FOREIGN KEY(gradedExamProfessorLogin) REFERENCES Professor(professorLogin),
	FOREIGN KEY(doneExamStudentLogin) REFERENCES Student(studentLogin)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ExamToGrade(
	examID SERIAL NOT NULL,
	openQuestionsGraded INTEGER NOT NULL,
	examToGradeProfessorLogin VARCHAR(40) NOT NULL,
	PRIMARY KEY(examID),
	FOREIGN KEY(examID) REFERENCES Exam(ID),
	FOREIGN KEY(examToGradeProfessorLogin) REFERENCES Professor(professorLogin)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Rules(
	examID SERIAL NOT NULL,
	rule VARCHAR(300) NOT NULL,
	PRIMARY KEY(examID, rule),
	FOREIGN KEY(examID) REFERENCES Exam(ID)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Question(
	examID SERIAL NOT NULL,
	questionID SERIAL NOT NULL,
	statement VARCHAR(500) NOT NULL,
	statementImage BYTEA,
	difficulty INTEGER NOT NULL,
	studentAnswer VARCHAR(500),
	studentAnswerImage BYTEA,
	correctAnswer VARCHAR(500),
    correctAnswerImage BYTEA,
	professorComments VARCHAR(500),
	score DECIMAL(5, 2) NOT NULL,
	PRIMARY KEY(questionID),
	FOREIGN KEY(examID) REFERENCES Exam(ID)
	ON DELETE CASCADE ON UPDATE CASCADE
);
